from Crypto.Util.number import long_to_bytes, inverse
from math import gcd

h1 =7701519674802635624568439358177101143776891936750040799979794715973879484506338482626272479094883983303576387009319619446223833815957381692890959582750154890430083808227819261978780877654255399026171433037299953717487768604263883085898931363821092448089350045615398412862641309316437434137371376552187142829
h2 =2209420684337950345881598853979876346252112122248559039790842015548190940720676283498087843018735406588297452362415149953447251512176525867578407757663968740233176509529743371267351660499718839547676384866336143468659238277809842297427200144511087206588500777032685099397407452362954420777154597921361828608

n = 69793186306155925251926479680012119966709476363179127334428776323927355982702092020431833089351674726199873164073702604015256951026566616953424041835364339351738099720053922042426683090299883426364410001744542181024471044858397373176913060389590624861673840357316332148600587252416593467345978236488540073093
c = 160581820767615789422595337029768826274869987495119663988929141652658981349284381300606589972797307114744295927904869524686782610124199485645647467993051088669807681373840979700338319121935767401024912883310830485284979808084451855717313122969523224172058954842329468675514735169233950418963930675629762172
e1 = 0x10001
e2 = 0x100001

q = gcd(n, pow(h1, e2, n)*pow(5, e1*e2, n) - pow(h2, e1, n)*pow(2, e1*e2, n))
print(q)
p = n // q

d = inverse(0x10001, n - p - q + 1)
m = pow(c, d, n)
print(long_to_bytes(m))
